// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonthRevenue.Repository;

#nullable disable

namespace MonthRevenue.Migrations
{
    [DbContext(typeof(MonthContext))]
    [Migration("20240222084821_OtherProjectCategory")]
    partial class OtherProjectCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("MonthRevenue.Repository.BonusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("High")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Low")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BonusRule");
                });

            modelBuilder.Entity("MonthRevenue.Repository.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("HousFund")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SocialAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("MonthRevenue.Repository.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cardinal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Performance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("MonthRevenue.Repository.RevenueDayEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Count")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectCategory")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevenueDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitCardinal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPerformance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RevenueDay");
                });

            modelBuilder.Entity("MonthRevenue.Repository.RevenueDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Count")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RevenueId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitCardinal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPerformance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RevenueDetail");
                });

            modelBuilder.Entity("MonthRevenue.Repository.RevenueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BonusPerformance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PerformanceBonus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevenueDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalBonus")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPerformance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VipBonus")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VipPerformance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Revenue");
                });
#pragma warning restore 612, 618
        }
    }
}
